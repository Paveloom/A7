"""
Модуль, содержащий пример интерфейса для вписания
функции, представляющей сумму двух гауссовых функций
"""

import numpy as np  # Работа с массивами


# Определение функции для вписывания по умолчанию
def double_gaussian(x, a, b, c, d, e, f):
    """
    Функция, представляющая собой
    сумму двух функций Гаусса

    Параметры:
        a, b, c: Параметры первой функции Гаусса;
        d, e, f: Параметры второй функции Гаусса.
    """

    # Получение результата функции
    return a * np.exp(- (x - b) ** 2 / (2 * c ** 2)) + d * np.exp(- (x - e) ** 2 / (2 * f ** 2))


def s_double_gaussian(x: np.ndarray, params: np.ndarray):
    """
    Вспомогательная функция,
    представляющая собой
    сумму двух функций Гаусса

    Параметры:
        params: Параметры вспомогательной функции
    """

    # Создание массива
    result = np.zeros(len(x))

    # Получение результата функции
    for i in range(len(x)):
        result[i] = params[0] * np.exp(- (x[i] - params[1]) ** 2 / (2 * params[2] ** 2)) + \
                    params[3] * np.exp(- (x[i] - params[4]) ** 2 / (2 * params[5] ** 2))

    # Возвращение результата
    return result


#  Значение по умолчанию для списка начальных параметров
def p_double_gaussian(x: np.ndarray, y: np.ndarray):
    """
    Функция для получения начальных значений
    для функции, представляющей собой
    сумму двух функций Гаусса

    Параметры:
        x: Массив аргументов;
        y: Массив значений функции.
    """

    # Вычисление вспомогательных переменных

    la = len(x) / 4
    lb = 3 * la
    ma = y.max()

    return [ma, la, 1, ma, lb, 1]
